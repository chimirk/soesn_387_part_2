Index: src/main/webapp/login_page_funtionality.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"java.util.ArrayList\" %>\r\n<%@ page import=\"java.security.MessageDigest\" %>\r\n<%@ page import=\"java.security.NoSuchAlgorithmException\" %>\r\n<%@ page import=\"java.io.BufferedReader\" %>\r\n<%@ page import=\"java.io.FileReader\" %>\r\n<%@ page import=\"java.io.IOException\" %>\r\n<%@ page import=\"com.google.gson.Gson\" %>\r\n<%\r\n    String username = \"\";\r\n    String userpassword = \"\";\r\n    ArrayList<String> errors = new ArrayList();\r\n    String pathName = \"path/users.json\";\r\n\r\n    if (\"POST\".equals(request.getMethod())) {\r\n        if (request.getParameter(\"login_btn\") != null) {\r\n            username = request.getParameter(\"username\");\r\n            if (username.isEmpty()) errors.add(\"Username is required\");\r\n            userpassword = request.getParameter(\"userpassword\");\r\n            if (userpassword.isEmpty()) errors.add(\"Password is required\");\r\n\r\n            if (errors.size() == 0) {\r\n                //calculate MD5 hash of password\r\n                MessageDigest md = null;\r\n                try {\r\n                    md = MessageDigest.getInstance(\"MD5\");\r\n                    md.update(userpassword.getBytes());\r\n                    byte[] bytes = md.digest();\r\n                    StringBuilder sb = new StringBuilder();\r\n                    for (int i = 0; i < bytes.length; i++) {\r\n                        sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));\r\n                    }\r\n                    userpassword = sb.toString();\r\n                } catch (NoSuchAlgorithmException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                //read from JSON file and see if username and password match.\r\n                User[] users = readJsonFile(pathName);\r\n\r\n                //check if we have a user match\r\n                User loggedInUser = null;\r\n                for(int i = 0; i < users.length; i++) {\r\n                    if(users[i].id.equals(username) &&\r\n                            users[i].hashedPassword.equals(userpassword)) {\r\n                        loggedInUser = users[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //if loggedInUser is not null, we are logged in\r\n                if (loggedInUser != null) {\r\n\r\n                } else {\r\n                    errors.add(\"Wrong username/password combination\");\r\n                }\r\n\r\n            }  //end no errors\r\n        }\r\n    }\r\n\r\n%>\r\n<%!\r\n    private static User[] readJsonFile(String pathName) throws IOException {\r\n        String jsonText = \"\";\r\n\r\n        try (BufferedReader br = new BufferedReader(new FileReader(pathName))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n\r\n            while (line != null) {\r\n                sb.append(line);\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n            }\r\n            jsonText = sb.toString();\r\n        }\r\n\r\n        //parse jsonText to array of objects\r\n        Gson g = new Gson();\r\n        User[] users = g.fromJson(jsonText, User[].class);\r\n\r\n        return users;\r\n        //parse jsonText to array of objects\r\n\r\n    }\r\n\r\n    public class User {\r\n        public String id;\r\n        public String fullName;\r\n        public String email;\r\n        public String hashedPassword;\r\n    }\r\n%>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/login_page_funtionality.jsp b/src/main/webapp/login_page_funtionality.jsp
--- a/src/main/webapp/login_page_funtionality.jsp	(revision a7ae7ca873c28e8a0b2966300db35f61b123e4ea)
+++ b/src/main/webapp/login_page_funtionality.jsp	(date 1636659120552)
@@ -9,7 +9,7 @@
     String username = "";
     String userpassword = "";
     ArrayList<String> errors = new ArrayList();
-    String pathName = "path/users.json";
+    String pathName = "src/main/webapp/users.json";
 
     if ("POST".equals(request.getMethod())) {
         if (request.getParameter("login_btn") != null) {
@@ -49,6 +49,7 @@
 
                 //if loggedInUser is not null, we are logged in
                 if (loggedInUser != null) {
+                    response.sendRedirect("/UserPage.jsp");
 
                 } else {
                     errors.add("Wrong username/password combination");
Index: target/soen_387_part_2-1.0-SNAPSHOT/login_page_funtionality.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"java.util.ArrayList\" %>\r\n<%@ page import=\"java.security.MessageDigest\" %>\r\n<%@ page import=\"java.security.NoSuchAlgorithmException\" %>\r\n<%@ page import=\"java.io.BufferedReader\" %>\r\n<%@ page import=\"java.io.FileReader\" %>\r\n<%@ page import=\"java.io.IOException\" %>\r\n<%@ page import=\"com.google.gson.Gson\" %>\r\n<%\r\n    String username = \"\";\r\n    String userpassword = \"\";\r\n    ArrayList<String> errors = new ArrayList();\r\n    String pathName = \"users.json\";\r\n\r\n    if (\"POST\".equals(request.getMethod())) {\r\n        if (request.getParameter(\"login_btn\") != null) {\r\n            username = request.getParameter(\"username\");\r\n            if (username.isEmpty()) errors.add(\"Username is required\");\r\n            userpassword = request.getParameter(\"userpassword\");\r\n            if (userpassword.isEmpty()) errors.add(\"Password is required\");\r\n\r\n            if (errors.size() == 0) {\r\n                //calculate MD5 hash of password\r\n                MessageDigest md = null;\r\n                try {\r\n                    md = MessageDigest.getInstance(\"MD5\");\r\n                    md.update(userpassword.getBytes());\r\n                    byte[] bytes = md.digest();\r\n                    StringBuilder sb = new StringBuilder();\r\n                    for (int i = 0; i < bytes.length; i++) {\r\n                        sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));\r\n                    }\r\n                    userpassword = sb.toString();\r\n                } catch (NoSuchAlgorithmException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                \r\n                System.out.println(\"Working Directory = \" + System.getProperty(\"user.dir\"));\r\n\r\n                //read from JSON file and see if username and password match.\r\n                User[] users = readJsonFile(pathName);\r\n\r\n                //check if we have a user match\r\n                User loggedInUser = null;\r\n                for(int i = 0; i < users.length; i++) {\r\n                    if(users[i].id.equals(username) &&\r\n                            users[i].hashedPassword.equals(userpassword)) {\r\n                        loggedInUser = users[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //if loggedInUser is not null, we are logged in\r\n                if (loggedInUser != null) {\r\n\r\n                } else {\r\n                    errors.add(\"Wrong username/password combination\");\r\n                }\r\n\r\n            }  //end no errors\r\n        }\r\n    }\r\n\r\n%>\r\n<%!\r\n    private static User[] readJsonFile(String pathName) throws IOException {\r\n        String jsonText = \"\";\r\n\r\n        try (BufferedReader br = new BufferedReader(new FileReader(pathName))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n\r\n            while (line != null) {\r\n                sb.append(line);\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n            }\r\n            jsonText = sb.toString();\r\n        }\r\n\r\n        //parse jsonText to array of objects\r\n        Gson g = new Gson();\r\n        User[] users = g.fromJson(jsonText, User[].class);\r\n\r\n        return users;\r\n        //parse jsonText to array of objects\r\n\r\n    }\r\n\r\n    public class User {\r\n        public String id;\r\n        public String fullName;\r\n        public String email;\r\n        public String hashedPassword;\r\n    }\r\n%>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/soen_387_part_2-1.0-SNAPSHOT/login_page_funtionality.jsp b/target/soen_387_part_2-1.0-SNAPSHOT/login_page_funtionality.jsp
--- a/target/soen_387_part_2-1.0-SNAPSHOT/login_page_funtionality.jsp	(revision a7ae7ca873c28e8a0b2966300db35f61b123e4ea)
+++ b/target/soen_387_part_2-1.0-SNAPSHOT/login_page_funtionality.jsp	(date 1636659120552)
@@ -9,7 +9,7 @@
     String username = "";
     String userpassword = "";
     ArrayList<String> errors = new ArrayList();
-    String pathName = "users.json";
+    String pathName = "src/main/webapp/users.json";
 
     if ("POST".equals(request.getMethod())) {
         if (request.getParameter("login_btn") != null) {
@@ -33,8 +33,6 @@
                 } catch (NoSuchAlgorithmException e) {
                     e.printStackTrace();
                 }
-                
-                System.out.println("Working Directory = " + System.getProperty("user.dir"));
 
                 //read from JSON file and see if username and password match.
                 User[] users = readJsonFile(pathName);
@@ -51,6 +49,7 @@
 
                 //if loggedInUser is not null, we are logged in
                 if (loggedInUser != null) {
+                    response.sendRedirect("/UserPage.jsp");
 
                 } else {
                     errors.add("Wrong username/password combination");
